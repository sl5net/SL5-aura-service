name: CI for ubuntu Setup and Test Recording Trigger
on:

  push:
    branches: [ master ]

  # Release
  release:
    types: [published]

  workflow_dispatch:
jobs:
  # Renamed job for clarity
  validate-ubuntu-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Cache models and tools (stable key)
        id: assets-cache # Give this step an ID
        uses: actions/cache@v4
        with:
          path: |
            ./LanguageTool-6.6
            ./models/
          key: ${{ runner.os }}-sl5-assets-v1

      - name: Download assets if cache miss
        if: steps.assets-cache.outputs.cache-hit != 'true'
        run: |
          echo "--> Cache not found. Downloading assets from GitHub Release..."
          wget https://github.com/sl5net/Vosk-System-Listener/releases/download/v0.2.0.1/LanguageTool-6.6.zip
          wget https://github.com/sl5net/Vosk-System-Listener/releases/download/v0.2.0.1/vosk-model-de-0.21.zip
          wget https://github.com/sl5net/Vosk-System-Listener/releases/download/v0.2.0.1/vosk-model-en-us-0.22.zip
          mkdir -p models
          mv vosk-model-*.zip models/

      - name: Run ubuntu_setup.sh (should now use local files)
        run: bash ./setup/ubuntu_setup.sh
        
      - name: Test Service Initialization
        run: |
          echo "--> Starting service in background..."
          # Start service and redirect its stderr/stdout to a file for live monitoring
          bash ./scripts/restart_venv_and_run-server.sh > service_output.log 2>&1 &
  
          echo "--> Waiting for successful model load..."
          LOG_FILE="log/dictation_service.log"
          
          # Wait up to 90 seconds (18 * 5s) for the final success message
          for i in {1..18}; do
            if grep -q "==    ✅ MODEL READY: 'en'." "$LOG_FILE"; then
              echo "✅ Success: Service initialized and models are ready."
              pkill -f dictation_service.py
              exit 0
            fi
            echo "Waiting... ($i/18)"
            sleep 5
          done
          
          echo "❌ Error: Service did not initialize successfully in time."
          echo "--- Displaying service startup output ---"
          cat service_output.log
          echo "--- Displaying service log for debugging ---"
          cat "$LOG_FILE"
          exit 1


      - name: Package Assets as Artifact(90days available from last run of this workflow)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sl5-assets-pack-ubuntu
          path: |
            ./LanguageTool-6.6
            ./models/
