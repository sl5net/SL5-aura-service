name: CI for ubuntu Setup and Test Recording Trigger
on:
  workflow_dispatch:
jobs:
  # Renamed job for clarity
  validate-ubuntu-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Pre-download and Verify All Assets
        run: |
          echo "--> Downloading all assets from our GitHub Release..."
          wget https://github.com/sl5net/Vosk-System-Listener/releases/download/v0.2.0.1/LanguageTool-6.6.zip
          wget https://github.com/sl5net/Vosk-System-Listener/releases/download/v0.2.0.1/vosk-model-de-0.21.zip
          wget https://github.com/sl5net/Vosk-System-Listener/releases/download/v0.2.0.1/vosk-model-en-us-0.22.zip

          echo "--> Verifying LanguageTool integrity..."
          echo "53600506b399bb5ffe1e4c8dec794fd378212f14aaf38ccef9b6f89314d11631  LanguageTool-6.6.zip" | sha256sum -c -

          echo "--> Placing models into the 'models' directory..."
          mkdir -p models
          mv vosk-model-*.zip models/

      - name: Run ubuntu_setup.sh (should now use local files)
        run: bash ./setup/ubuntu_setup.sh
        
        
        
      - name: Test Recording Trigger
        run: |
          echo "--> Starting service in background..."
          # Start the main service script and run it in the background
          bash ./scripts/restart_venv_and_run-server.sh &

          echo "--> Waiting 40s for service and models to initialize..."
          # Wait is necessary for LanguageTool server and Vosk models to load
          sleep 40

          echo "--> Triggering a test recording..."
          touch /tmp/vosk_trigger

          echo "--> Waiting 5s for the trigger to be processed and logged..."
          sleep 5

          echo "--> Verifying log file for success indicators..."
          LOG_FILE="log/dictation_service.log"
          if grep "TRIGGER DETECTED!" "$LOG_FILE" && \
             grep "Using model for lang" "$LOG_FILE" && \
             grep "silence_timout now set to" "$LOG_FILE"; then
            echo "✅ Success: All expected log entries for a trigger were found."
          else
            echo "❌ Error: Could not find all expected log entries."
            echo "--- Displaying log content for debugging ---"
            cat "$LOG_FILE"
            exit 1
          fi

          echo "--> Cleaning up background processes..."
          pkill -f dictation_service.py

          
          
